name: Toolforge

on:
  push:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: tf-deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v4
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/toolforge.key
          chmod 600 ~/.ssh/toolforge.key
          cat >> ~/.ssh/config <<END
          Host toolforge
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/toolforge.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: mdaniels5757
          SSH_KEY: ${{ secrets.TOOLFORGE_PRIVATE_KEY }}
          SSH_HOST: login.toolforge.org
      - name: Deploy
        run: >-
          ssh toolforge become mdanielsbot bash << 'EOF'
              set -eo pipefail;
              export NVM_DIR="$HOME/.nvm";
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh";
              [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion";
              nvm use default;
              cd /data/project/mdanielsbot/mwn;
              if [[ "$(git pull --ff-only | grep -c "Already up to date")" -eq 0 ]]; then
                if [[ "$(git diff --name-only HEAD HEAD@{1} | grep -c package.json)" -gt 0 ]]; then
                  echo "Running npm install for mwn ...";
                  npm install;
                fi;
                echo "Building mwn ...";
                npx tsc || echo;
              fi;
              cd /data/project/mdanielsbot/MD-SDZeroBot;
              echo "Pulling SDZeroBot ...";
              git checkout master;
              git pull --ff-only;
              if [[ "$(git diff --name-only HEAD HEAD@{1} | grep -c package.json)" -gt 0 ]]; then
                echo "Running npm install for SDZeroBot ...";
                npm install;
              fi;
              echo "Building SDZeroBot ...";
              npm run tsc;
              echo "Updating jobs.yml ...";
              toolforge jobs load jobs.yml;
              toolforge jobs restart db-tabulator;
              toolforge jobs restart shells;
              echo "Restarting eventstream-router ...";
              cd eventstream-router && npm restart && cd -;
              cp webservice/www-js-package.json /data/project/mdanielsbot/www/js/package.json;
              echo "Restarting SDZeroBot webservice ...";
              cd /data/project/mdanielsbot/MD-SDZeroBot/webservice && npm restart && cd -;
          EOF
      - name: Cleanup SSH
        run: rm -rf .ssh